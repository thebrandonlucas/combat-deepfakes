{"version":3,"sources":["components/pieces/VideoInfo.js","components/pages/myvideos.component.js","ipfsHash.js","components/pieces/Navbar.js","components/pages/home.component.js","components/pieces/ExploreList.js","components/pieces/LinkOriginal.js","components/pieces/ViewOriginal.js","components/pages/explore.component.js","components/pages/deepcoin.component.js","App.js","serviceWorker.js","index.js"],"names":["VideoInfo","_this","this","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","key","shortid","generate","src","concat","props","data","multihash","controls","className","Date","timestamp","toLocaleString","slice","replace","href","value","onClick","e","setViewOriginal","fakeMarks","Component","MyVideos","Object","C_Users_thebr_Desktop_Programming_crypto_deepfake_solution_refactored_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","C_Users_thebr_Desktop_Programming_crypto_deepfake_solution_refactored_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","C_Users_thebr_Desktop_Programming_crypto_deepfake_solution_refactored_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","captureFile","_ref","C_Users_thebr_Desktop_Programming_crypto_deepfake_solution_refactored_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_Users_thebr_Desktop_Programming_crypto_deepfake_solution_refactored_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","event","file","reader","wrap","_context","prev","next","preventDefault","target","files","window","FileReader","readAsArrayBuffer","onloadend","setState","buffer","Buffer","result","stop","_x","apply","arguments","onSubmit","loading","ipfs","add","state","_ref2","_callee2","error","hash","_context2","Multihash","getBytes32FromMultihash","contract","methods","setVideoData","account","digest","hashFunction","size","send","from","_x2","_x3","videoData","fakeLink","originalLinks","loadAuthorVideos","getAuthorVideoCount","videoDataLength","parseInt","multihashes","i","getAuthorVideoData","currentVideoData","getMultihashFromBytes32","includes","push","_this2","react__WEBPACK_IMPORTED_MODULE_7___default","type","onChange","map","_pieces_VideoInfo__WEBPACK_IMPORTED_MODULE_10__","decoded","bs58","decode","toString","hashBytes","multihashBytes","constructor","length","set","encode","response","parseContractResponse","__webpack_exports__","Navbar","classCallCheck","possibleConstructorReturn","getPrototypeOf","showCompareSearch","showCompare","handleSearch","bind","assertThisInitialized","changePage","search","pages","id","title","onSearch","react_default","usingAccount","page","Home","rel","ExploreList","index","author","JSON","stringify","linkFake","LinkOriginal","asyncToGenerator","regenerator_default","submitSearch","tempSearch","onSearchChange","markAsDeepfake","fakeDigest","linkedFake","originalDigest","catch","alert","placeholder","ViewOriginal","link","supportCount","Explore","viewOriginal","loadVideos","getAuthors","authors","videoCount","j","parse","ViewOriginal_ViewOriginal","ExploreList_ExploreList","LinkOriginal_LinkOriginal","DeepCoin","onAddressChange","onSendChange","mintCoins","getMinter","getBalance","sendAddress","sendCoins","console","log","coinContract","name","minter","getAuthorCount","coins","require","ipfsClient","host","port","protocol","App","loadOriginalLinks","videos","comparehash","searchHash","deepfake","compareDeepfake","compareTimestamp","usingWallet","loadWeb3","loadBlockchainData","ethereum","web3","Web3","enable","currentProvider","on","eth","getAccounts","accounts","net","getId","networkId","networkData","Video","networks","videoAbi","abi","address","Contract","getOriginalLinksCount","len","getOriginalLinks","viewOriginalPage","getAttribute","pageContent","pageProps","home_component_Home","myvideos_component","assign","explore_component_Explore","deepcoin_component_DeepCoin","Navbar_Navbar","role","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d9abb5d5.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport shortid from 'shortid'\r\n\r\nexport default class VideoInfo extends Component {\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<video \r\n\t\t\t\t\tkey={shortid.generate()}\r\n\t\t\t\t\tsrc={`https://ipfs.infura.io/ipfs/${this.props.data.multihash}`} \r\n\t\t\t\t\tcontrols \r\n\t\t\t\t\tclassName=\"comparevideo\">\r\n\t\t\t\t</video>\r\n\t\t\t\t<p key={shortid.generate()}>{this.props.data.multihash}</p>\r\n\t\t\t\t<p key={shortid.generate()}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnew Date(this.props.data.timestamp * 1000)\r\n\t\t\t\t\t\t\t.toLocaleString().slice(0, 22)\r\n\t\t\t\t\t\t\t.replace('T', ' ')\r\n\t\t\t\t\t}\r\n\t\t\t\t</p>  \r\n\t\t\t\t<a \r\n\t\t\t\t\tkey={shortid.generate()} \r\n\t\t\t\t\thref=\"#fakeMarks\" \r\n\t\t\t\t\tvalue={this.props.data.multihash} \r\n\t\t\t\t\tonClick={(e) => this.props.setViewOriginal(e, true)}\r\n\t\t\t\t>\r\n\t\t\t\t\tFakeMarks: {this.props.data.fakeMarks}\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","import React, { Component } from 'react';\r\nimport shortid from 'shortid'\r\nimport Multihash from '../../ipfsHash'\r\nimport VideoInfo from '../pieces/VideoInfo'\r\n// import ViewOriginal from '../pieces/ViewOriginal'\r\n\r\n\r\nexport default class MyVideos extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state = {\r\n\t\t\tvideoData: null, \r\n\t\t\tbuffer: null, \r\n\t\t\tfakeLink: null, \r\n\t\t\toriginalLinks: null, \r\n\t\t\tloading: false\r\n\t\t}\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\tawait this.loadAuthorVideos()\r\n\t}\r\n\r\n\tasync loadAuthorVideos() {\r\n\t\tlet videoDataLength = await this.props.contract.methods.getAuthorVideoCount(this.props.account).call()\r\n\t\tif (videoDataLength !== null && videoDataLength !== 0) {\r\n\t\t\tvideoDataLength = parseInt(videoDataLength['_hex'], 16) \r\n\t\t\tlet videoData = []; \r\n\t\t\tlet multihashes = []\r\n\t\t\tfor (let i = 0; i < videoDataLength; i++) {\r\n\t\t\t\tlet currentVideoData = await this.props.contract.methods.getAuthorVideoData(this.props.account, i).call()\r\n\t\t\t\tlet multihash = [currentVideoData['0'], currentVideoData['1'], currentVideoData['2']];\r\n\t\t\t\tmultihash = Multihash.getMultihashFromBytes32(multihash)\r\n\r\n\t\t\t\t// filter duplicate entries, FIXME: instead of filtering, figure out why duplicates are getting added in the first place\r\n\t\t\t\tif (multihashes.includes(multihash)) {\r\n\t\t\t\t\tcontinue\r\n\t\t\t\t}\r\n\t\t\t\tmultihashes.push(multihash)\r\n\t\t\t\tlet timestamp = currentVideoData['3']\r\n\t\t\t\tlet fakeMarks = parseInt(currentVideoData['4']['_hex'], 16)\r\n\t\t\t\tvideoData.push({'multihash': multihash, 'timestamp': timestamp, 'fakeMarks': fakeMarks})\r\n\t\t\t}\r\n\t\t\tthis.setState({ videoData })\r\n\t\t} \r\n\t}\r\n\r\n\tcaptureFile = async (event) => {\r\n\t\tevent.preventDefault()\r\n\t\tconst file = event.target.files[0]\r\n\t\tconst reader = new window.FileReader()\r\n\t\treader.readAsArrayBuffer(file)\r\n\t\treader.onloadend = () => {\r\n\t\t  this.setState({ buffer: Buffer(reader.result)})\r\n\t\t}\r\n\t}\r\n\r\n\t// Example hash: QmczkQ57DfWTghtjbpXoSRAYKDRSPmvBbmzBcGbkc2KrG6\r\n\t// example url: 'https://ipfs.infura.io/ipfs/QmczkQ57DfWTghtjbpXoSRAYKDRSPmvBbmzBcGbkc2KrG6'\r\n\tonSubmit = (event) => {\r\n\t\tevent.preventDefault()\r\n\t\tthis.setState({ loading: true })\r\n\t\tthis.props.ipfs.add(this.state.buffer, async (error, result) => {\r\n\t\t\tif (error) throw error\r\n\t\t\tconst hash = Multihash.getBytes32FromMultihash(result[0].hash)\r\n\t\t\t// TODO: merge two 'send's in one function?\r\n\t\t\t// FIXME: should set time function be implemented in javascript or solidity?\r\n\r\n\t\t\tthis.props.contract.methods.setVideoData(\r\n\t\t\t\tthis.props.account,\r\n\t\t\t\thash.digest,\r\n\t\t\t\thash.hashFunction,\r\n\t\t\t\thash.size\r\n\t\t\t).send({ from: this.props.account })\r\n\t\t})\r\n\t\t// this.setState({ loading: false })\r\n\t\t// TODO: manually reload page after metamask popup\r\n\t\t// TODO: create loading message for video upload\r\n\t\t// test2: QmSWFUN7CBW4EFGQxNVtHkxdUr4QBy78nhnPxVnSVy8kUD\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t{\r\n\t\t\t\t// TODO: allow viewing marked fakes from \"myvideos\" page\r\n\t\t\t\t// this.props.viewOriginal \r\n\t\t\t\t// ? <ViewOriginal />\r\n\t\t\t\t// : <h1>Add Video</h1>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t\r\n\t                { \r\n\t                \tthis.state.loading === true\r\n\t\t\t\t\t\t? \r\n\t\t\t\t\t\t<h1>\r\n\t\t\t\t\t\t\tLoading video to IPFS. This may take awhile...\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\tReload window after MetaMask transaction\r\n\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h1>Add Video</h1>\r\n\t\t\t\t\t\t\t<p>&nbsp;</p>\r\n\t\t\t                <form onSubmit={this.onSubmit}>\r\n\t\t\t                  <input type=\"file\" onChange={this.captureFile} />\r\n\t\t\t                  <input type=\"submit\" />\r\n\t\t\t                </form> \r\n\t\t                </div>\r\n\t                }\r\n\t                <p>&nbsp;</p>\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.state.videoData != null\r\n\t\t\t\t\t\t\t? this.state.videoData.map((data) => {\r\n\t\t\t\t\t\t\t  return (\r\n\t\t\t\t\t\t\t    <div className=\"col-sm\" key={shortid.generate()}>\r\n\t\t\t\t\t\t\t      <VideoInfo data={data} setViewOriginal={this.props.setViewOriginal} />\r\n\t\t\t\t\t\t\t    </div>\r\n\t\t\t\t\t\t\t  )})\r\n\t\t\t\t\t\t\t: <h1>No Videos uploaded yet!</h1>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","import bs58 from 'bs58';\r\n\r\n/**\r\n * @typedef {Object} Multihash\r\n * @property {string} digest The digest output of hash function in hex with prepended '0x'\r\n * @property {number} hashFunction The hash function code for the function used\r\n * @property {number} size The length of digest\r\n */\r\nclass Multihash {\r\n   /**\r\n   * Partition multihash string into object representing multihash\r\n   *\r\n   * @param {string} multihash A base58 encoded multihash string\r\n   * @returns {Multihash}\r\n   */\r\n  getBytes32FromMultihash(multihash) {\r\n    const decoded = bs58.decode(multihash);\r\n\r\n    return {\r\n      digest: `0x${decoded.slice(2).toString('hex')}`,\r\n      hashFunction: decoded[0],\r\n      size: decoded[1],\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Encode a multihash structure into base58 encoded multihash string\r\n   *\r\n   * @param {Multihash} multihash\r\n   * @returns {(string|null)} base58 encoded multihash string\r\n   */\r\n  getMultihashFromBytes32(multihash) {\r\n    const [digest, hashFunction, size] = [multihash['0'], multihash['1'], multihash['2']];\r\n    if (size === 0) return null;\r\n\r\n    // cut off leading \"0x\"\r\n    const hashBytes = Buffer.from(digest.slice(2), 'hex');\r\n\r\n    // prepend hashFunction and digest size\r\n    const multihashBytes = new (hashBytes.constructor)(2 + hashBytes.length);\r\n\r\n    multihashBytes[0] = hashFunction;\r\n    multihashBytes[1] = size;\r\n    multihashBytes.set(hashBytes, 2);\r\n\r\n    return bs58.encode(multihashBytes);\r\n  }\r\n\r\n  /**\r\n   * Parse Solidity response in array to a Multihash object\r\n   *\r\n   * @param {array} response Response array from Solidity\r\n   * @returns {Multihash} multihash object\r\n   */\r\n  parseContractResponse(response) {\r\n    const [digest, hashFunction, size] = [response['digest'], response['hashfunction'], response['size']];\r\n    // console.log()\r\n    // const multihash = {digest, hashFunction, size}\r\n    // return multihash\r\n    return {\r\n      digest,\r\n      hashFunction,\r\n      size,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Parse Solidity response in array to a base58 encoded multihash string\r\n   *\r\n   * @param {array} response Response array from Solidity\r\n   * @returns {string} base58 encoded multihash string\r\n   */\r\n  getMultihashFromContractResponse(response) {\r\n    return this.getMultihashFromBytes32(this.parseContractResponse(response));\r\n  }\r\n}\r\n\r\nexport default new Multihash()\r\n// module.exports = Multihash; ","import React, { Component } from 'react';\r\n\r\nexport default class Navbar extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.handleSearch = this.handleSearch.bind(this)\r\n\t\tthis.changePage = this.changePage.bind(this)\r\n\t\t\r\n\t\tthis.state = {\r\n\t\t\tshowCompare: null, \r\n\t\t\tsearch: null, \r\n\t\t\tpages: [\r\n\t\t\t\t{id: \"home\", title: \"Home\"}, \r\n\t\t\t\t// {id: \"exploreDeepfakes\", title: \"Explore Deepfakes\"}, \r\n\t\t\t\t{id: \"exploreOriginals\", title: \"Explore\"}, \r\n\t\t\t\t{id: \"myVideos\", title: \"My Videos\"}, \r\n\t\t\t\t{id: \"deepCoin\", title: \"Deepfakecoin\"}\r\n\t\t\t]\r\n\t\t}\r\n\t}\r\n\r\n\thandleSearch(e) {\r\n\t\tthis.props.onSearch(e)\r\n\t}\r\n\r\n\tchangePage(e) {\r\n\t\tthis.props.changePage(e)\r\n\t}\r\n\r\n\tshowCompareSearch = (event) => {\r\n\t\tlet showCompare = this.state.showCompare\r\n\t\tthis.setState({\r\n\t\t  showCompare: !showCompare\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<nav className=\"navbar fixed-top bg-dark flex-md-nowrap p-0 shadow\">\r\n\t\t\t\t<li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\r\n\t\t\t\t  <small className=\"text-white\">Account: {this.props.account}</small>\r\n\t\t\t\t</li>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// FIXME: refactor nav attributes and usingWallet to be outside of Navbar element\r\n\t\t\t\t\t\tthis.props.usingAccount === true\r\n\t\t\t\t\t\t?\r\n\t\t\t\t\t\t\tthis.state.pages.map((page) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<a \r\n\t\t\t\t\t\t\t\t\t\t\tkey={page.id}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"nav-link\" \r\n\t\t\t\t\t\t\t\t\t\t\tid={page.id} \r\n\t\t\t\t\t\t\t\t\t\t\thref={`#${page.id}`}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.changePage}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{page.title}\r\n\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t:   // show home page if they aren't using MetaMask\r\n\t\t\t\t\t\t\t<a \r\n\t\t\t\t\t\t\t\tkey={this.state.pages[0].id}\r\n\t\t\t\t\t\t\t\tclassName=\"nav-link\" \r\n\t\t\t\t\t\t\t\tid={this.state.pages[0].id} \r\n\t\t\t\t\t\t\t\thref={`#${this.state.pages[0].id}`}\r\n\t\t\t\t\t\t\t\tonClick={this.changePage}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{this.state.pages[0].title}\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</nav>\r\n\t\t)\r\n\t}\r\n}","import React, { Component } from 'react';\r\n// import shortid from 'shortid'\r\n\r\nexport default class Home extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"content\">\r\n\t\t\t\t<h1>Combating Deepfakes</h1>\r\n\t\t\t\t<p>This Dapp attempts to use the Ethereum blockchain and IPFS to help solve the Deepfake problem</p>\r\n\t\t\t\t<p className=\"warning\">WARNING: This is a work in progress</p>\r\n\t\t\t\t<h3>What are Deepfakes?</h3>\r\n\t\t\t\t<p>Read more about them&nbsp;\r\n\t\t\t\t\t<a href=\"https://goberoi.com/exploring-deepfakes-20c9947c22d9\">here</a>\r\n\t\t\t\t</p>\r\n\t\t\t\t<h3>How do I use this Dapp?</h3>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<p>If you haven't yet, install&nbsp;<a href=\"https://metamask.io/\" target=\"_blank\" rel=\"noopener noreferrer\">MetaMask</a></p>\r\n\t\t\t\t\t<p>Continue with instructions below after setting up MetaMask and connecting to this Dapp</p>\r\n\t\t\t\t\t<h5>To upload a video</h5>\r\n\t\t\t\t\t<ol>\r\n\t\t\t\t\t\t<li>Click on \"My Videos\"</li>\r\n\t\t\t\t\t\t<li>Choose and add the appropriate file</li>\r\n\t\t\t\t\t\t<li>Pay Fee to place video's IPFS hash on the blockchain</li>\r\n\t\t\t\t\t\t<li>Your video should appear in \"My Videos\" and under \"Explore Originals\"</li>\r\n\t\t\t\t\t</ol>\r\n\t\t\t\t\t<h5>To mark a video as a Deepfake</h5>\r\n\t\t\t\t\t<ol>\r\n\t\t\t\t\t\t<li>Go to \"Explore\"</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\tIf you see a video that isn't an original and you can find the video it links to, \r\n\t\t\t\t\t\t\tcopy the QmHash of the original video and then click \"Mark as Deepfake\"\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>Enter the QmHash of the original in the search box, and mark that video as a fake</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\tClick on \"Explore\" in the navbar and find your video. \r\n\t\t\t\t\t\t\tYou should now see that it's \"FakeMark\" count has increased\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ol>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<h3>How can I contribute?</h3>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tI'd love to have help whether it's on improving the code or the idea itself. <br />\r\n\t\t\t\t\tPlease go to the&nbsp;\r\n\t\t\t\t\t<a href=\"https://github.com/thebrandonlucas/combat-deepfakes-blockchain/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n\t\t\t\t\t\tGithub\r\n\t\t\t\t\t</a>\r\n\t\t\t\t\t&nbsp;or send me an email at&nbsp;\r\n\t\t\t\t\t<a href=\"mailto:thebrandonlucas@gmail.com\">\r\n\t\t\t\t\t\tthebrandonlucas@gmail.com\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","import React, { Component } from 'react';\r\nimport shortid from 'shortid'\r\nimport VideoInfo from './VideoInfo'\r\n\r\nexport default class ExploreList extends Component {\r\n\trender() {\r\n\t\treturn(\r\n\t\t\tthis.props.videoData != null\r\n\t\t\t? (\r\n\t\t\tthis.props.videoData.map((data, index) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className=\"col-sm\" key={shortid.generate()}>\r\n\t\t\t\t\t\t<VideoInfo data={data} setViewOriginal={this.props.setViewOriginal} />\r\n\t\t\t\t\t\t<p key={shortid.generate()}>Author: {data.author}</p>\r\n\t\t\t\t\t\t<button \r\n\t\t\t\t\t\t\tkey={shortid.generate()} \r\n\t\t\t\t\t\t\tvalue={JSON.stringify(data)} \r\n\t\t\t\t\t\t\tonClick={this.props.linkFake}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tMark as Deepfake\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)})\r\n\t\t\t)\r\n\t\t\t: <h1>No one has uploaded any videos!</h1>\r\n\t\t)\r\n\t}\r\n}","import React, { Component } from 'react';\r\nimport Multihash from '../../ipfsHash'\r\n\r\nexport default class LinkOriginal extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\tthis.onSearchChange = this.onSearchChange.bind(this)\r\n\t\tthis.markAsDeepfake = this.markAsDeepfake.bind(this)\r\n\r\n\t\tthis.state = {\r\n\t\t\ttempSearch: \"\",\r\n\t\t\tsubmitSearch: \"\"\r\n\t\t}\r\n\t}\r\n\r\n\tonSearchChange(e) {\r\n\t\tthis.setState({\r\n\t\t\ttempSearch: e.target.value\r\n\t\t})\r\n\t}\r\n\r\n\tsearch = async (e) => {\r\n\t\te.preventDefault()\r\n\t\t// let originalData = await this.props.\r\n\t\tthis.setState({\r\n\t\t\tsubmitSearch: this.state.tempSearch\r\n\t\t})\r\n\t}\r\n\r\n\tasync markAsDeepfake() {\r\n\t\tconst fakeDigest = Multihash.getBytes32FromMultihash(this.props.linkedFake['multihash'])['digest']\r\n\t\tlet originalDigest = Multihash.getBytes32FromMultihash(this.state.submitSearch)['digest']\r\n\t\t// FIXME: is there a better way to catch require() failures \r\n\t\tthis.props.contract.methods.markAsDeepfake(fakeDigest, originalDigest)\r\n\t\t.send({ from: this.props.account })\r\n\t\t.catch(() => {\r\n\t\t\talert(\"Error: user \" + this.props.account + \" has already marked this video as a fake.\")\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.state.linkedFake === \"\" &&\r\n\t\t\t\t\t<div className=\"row justify-content-center\">\r\n\t\t\t\t\t\t<p>Link fake video to original by searching Qmhash</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t\t<div className=\"row justify-content-center\">\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\tplaceholder=\"Enter Qm Hash\" \r\n\t\t\t\t\t\tvalue={this.state.tempSearch}\r\n\t\t\t\t\t\tonChange={this.onSearchChange} \r\n\t\t\t\t\t\tclassName=\"search-compare\" \r\n\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button onClick={this.search}>Submit</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row justify-content-center\">\r\n\t\t\t\t\t<p>&nbsp;</p>\r\n\t\t\t\t\t<div className=\"col-sm-6\">\r\n\t\t\t\t\t\t<h3>Mark as Fake</h3>\r\n\t\t\t\t\t\t<video \r\n\t\t\t\t\t\t\tsrc={`https://ipfs.infura.io/ipfs/${this.props.linkedFake['multihash']}`} \r\n\t\t\t\t\t\t\tcontrols \r\n\t\t\t\t\t\t\tclassName=\"comparevideo\">\r\n\t\t\t\t\t\t</video>\r\n\t\t\t\t\t\t<p>{this.props.linkedFake['multihash']}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state.submitSearch !== \"\" &&\r\n\t\t\t\t\t\t<div className=\"col-sm-6\">\r\n\t\t\t\t\t\t\t<h3>with below as Original?</h3>\r\n\t\t\t\t\t\t\t<video \r\n\t\t\t\t\t\t\t\tsrc={`https://ipfs.infura.io/ipfs/${this.state.submitSearch}`} \r\n\t\t\t\t\t\t\t\tcontrols \r\n\t\t\t\t\t\t\t\tclassName=\"comparevideo\">\r\n\t\t\t\t\t\t\t</video>\r\n\t\t\t\t\t\t\t<p>{this.state.submitSearch}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row justify-content-center\">\r\n\t\t\t\t\t<button onClick={this.markAsDeepfake}>Mark as Deepfake</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","import React, { Component } from 'react';\r\nimport shortid from 'shortid'\r\n\r\nexport default class ViewOriginal extends Component {\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<div >\r\n\t\t\t\t<h3>The video</h3><h3><b>{this.props.fakeLink}</b></h3><h3> was linked to the following video(s):</h3>\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.props.originalLinks != null \r\n\t\t\t\t\t? this.props.originalLinks.map((link) => {\r\n\t\t\t\t\t\treturn <div key={shortid.generate()}>\r\n\t\t\t\t\t\t\t<video \r\n\t\t\t\t\t\t\t\tkey={shortid.generate()}\r\n\t\t\t\t\t\t\t\tsrc={`https://ipfs.infura.io/ipfs/${link.multihash}`} \r\n\t\t\t\t\t\t\t\tcontrols \r\n\t\t\t\t\t\t\t\tclassName=\"comparevideo\">\r\n\t\t\t\t\t\t\t</video>\r\n\t\t\t\t\t\t\t<p className=\"row justify-content-center\" key={shortid.generate()}>{link.multihash}</p>\r\n\t\t\t\t\t\t\t<p className=\"row justify-content-center\" key={shortid.generate()}>Support Count: {link.supportCount}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t})\r\n\t\t\t\t\t: <h1>Nothing to see here!</h1>\r\n\t\t\t\t}\r\n\t\t\t\t<button onClick={(e) => this.props.setViewOriginal(e, false)}>Back</button>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","import React, { Component } from 'react'\r\nimport Multihash from '../../ipfsHash'\r\nimport ExploreList from '../pieces/ExploreList'\r\nimport LinkOriginal from '../pieces/LinkOriginal'\r\nimport ViewOriginal from '../pieces/ViewOriginal'\r\n\r\nexport default class Explore extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\tthis.linkFake = this.linkFake.bind(this)\r\n\r\n\t\tthis.state = {\r\n\t\t\tvideoData: null, \r\n\t\t\tlinkedFake: null, \r\n\t\t\tviewOriginal: false, \r\n\t\t\tfakeDigest: null, \r\n\t\t\tfakeLink: null, \r\n\t\t\toriginalLinks: null\r\n\t\t}\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\tawait this.loadVideos()\r\n\t}\r\n\r\n\tasync loadVideos() {\r\n\t\tlet authors = await this.props.contract.methods.getAuthors().call()\r\n\t\tif (authors !== null && authors.length > 0) {\r\n\t\t\tlet videoData = []; \r\n\t\t\tfor (let i = 0; i < authors.length; i++) {\r\n\t\t\t\tlet videoCount = await this.props.contract.methods.getAuthorVideoCount(authors[i]).call()\r\n\t\t\t\tvideoCount = parseInt(videoCount['_hex'], 16) \r\n\t\t\t\tlet multihashes = []\r\n\t\t\t\tfor (let j = 0; j < videoCount; j++) {\r\n\t\t\t\t\tlet currentVideoData = await this.props.contract.methods.getAuthorVideoData(authors[i], j).call()\r\n\t\t\t\t\tlet multihash = [currentVideoData['0'], currentVideoData['1'], currentVideoData['2']]\r\n\t\t\t\t\tmultihash = Multihash.getMultihashFromBytes32(multihash)\r\n\r\n\t\t\t\t\t// filter duplicate entries, FIXME: instead of filtering, figure out why duplicates are getting added in the first place\r\n\t\t\t\t\tif (multihashes.includes(multihash)) {\r\n\t\t\t\t\t\tcontinue\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmultihashes.push(multihash)\r\n\t\t\t\t\tlet timestamp = currentVideoData['3']\r\n\t\t\t\t\tlet fakeMarks = parseInt(currentVideoData['4']['_hex'], 16)\r\n\t\t\t\t\tvideoData.push({\r\n\t\t\t\t\t\t'multihash': multihash, \r\n\t\t\t\t\t\t'timestamp': timestamp, \r\n\t\t\t\t\t\t'fakeMarks': fakeMarks, \r\n\t\t\t\t\t\t'author': authors[i], \r\n\t\t\t\t\t\t'index': j\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.setState({ videoData })\r\n\t\t} \r\n\t}\r\n\r\n\tlinkFake(e) {\r\n\t\tthis.setState({\r\n\t\t\tlinkedFake: JSON.parse(e.target.value)\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{ \r\n\t\t\t\t\tthis.props.page === \"exploreDeepfakes\"\r\n\t\t\t\t\t? <h1>Coming soon...</h1>\r\n\t\t\t\t\t: <div>\r\n\t\t\t\t\t\t<div className=\"row justify-content-center\">\r\n\t\t\t\t\t\t\t<h1>Original Videos</h1>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<p>&nbsp;</p>\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.props.viewOriginal\r\n\t\t\t\t\t\t\t\t? <ViewOriginal\r\n\t\t\t\t\t\t\t\t\tfakeLink={this.state.fakeLink}\r\n\t\t\t\t\t\t\t\t\toriginalLinks={this.props.originalLinks}\r\n\t\t\t\t\t\t\t\t\tsetViewOriginal={this.props.setViewOriginal}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t: this.state.linkedFake == null \r\n\t\t\t\t\t\t\t\t\t? <ExploreList\r\n\t\t\t\t\t\t\t\t\t\tvideoData={this.state.videoData}\r\n\t\t\t\t\t\t\t\t\t\tlinkFake={this.linkFake}\r\n\t\t\t\t\t\t\t\t\t\tsetViewOriginal={this.props.setViewOriginal}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t: <LinkOriginal \r\n\t\t\t\t\t\t\t\t\t\taccount={this.props.account}\r\n\t\t\t\t\t\t\t\t\t\tcontract={this.props.contract}\r\n\t\t\t\t\t\t\t\t\t\tlinkedFake={this.state.linkedFake}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","import React, { Component } from 'react';\r\n// import shortid from 'shortid'\r\n\r\nexport default class DeepCoin extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\t// this.loadCoins = this.loadCoins.bind(this)\r\n\t\tthis.onAddressChange = this.onAddressChange.bind(this)\r\n\t\tthis.onSendChange = this.onSendChange.bind(this)\r\n\t\tthis.mintCoins = this.mintCoins.bind(this)\r\n\t\tthis.getMinter = this.getMinter.bind(this)\r\n\t\tthis.getBalance = this.getBalance.bind(this)\r\n\r\n\t\tthis.state = {\r\n\t\t\tsendAddress: \"\", \r\n\t\t\tsendCoins: \"\"\r\n\t\t}\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\t// await this.loadCoins()\r\n\t}\r\n\r\n\tonAddressChange(e) {\r\n\t\tthis.setState({ sendAddress: e.target.value })\r\n\t}\r\n\r\n\tonSendChange(e) {\r\n\t\tthis.setState({ sendCoins: e.target.value })\r\n\t}\r\n\r\n\tasync mintCoins() {\r\n\t\tconsole.log(this.state.sendAddress)\r\n\t\tconsole.log(this.state.sendCoins)\r\n\t\tconsole.log(this.props.account)\r\n\t\tthis.props.coinContract.methods.set(\"hello\")\r\n\t\t.send( { from: this.props.account })\r\n\t\t.catch(() => {\r\n\t\t\talert(\"Error: user \" + this.props.account + \" is not the minter.\")\r\n\t\t})\r\n\t\t// this.props.coinContract.methods.transfer(this.state.sendAddress, this.state.sendCoins)\r\n\t\t// .send( { from: this.props.account })\r\n\t\t// .catch(() => {\r\n\t\t// \talert(\"Error: user \" + this.props.account + \" is not the minter.\")\r\n\t\t// })\r\n\t}\r\n\r\n\tasync getMinter() {\r\n\t\tconsole.log(this.props.contract)\r\n\t\tconsole.log( await this.props.coinContract.methods.name().call())\r\nlet minter = await this.props.coinContract.methods.name().call()\r\n\t\tconsole.log(minter)\r\n\t}\r\n\r\n\tasync getBalance() {\r\n\t\t// let coins = await this.props.coinContract.methods.checkBalance().call()\r\n\t\tlet coins = await this.props.contract.methods.getAuthorCount().call()\r\n\t\tconsole.log(coins)\r\n\r\n\t}\r\n\r\n\t// async loadCoins() {\r\n\t// \tlet coins = await this.props.contract.methods\r\n\t// }\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h1>Coming soon...</h1>\r\n\t\t\t\t{\r\n\t\t\t\t\t/*\r\n\t\t\t\t<input \r\n\t\t\t\t\tonChange={this.onAddressChange}\r\n\t\t\t\t\tvalue={this.state.sendAddress}\r\n\t\t\t\t\tplaceholder=\"Address for minted coins...\" \r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t/>\r\n\t\t\t\t<input \r\n\t\t\t\t\tonChange={this.onSendChange}\r\n\t\t\t\t\tvalue={this.state.sendCoins}\r\n\t\t\t\t\tplaceholder=\"# of coins to mint...\" \r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t/>\r\n\t\t\t\t<button onClick={this.mintCoins}>Submit</button>\r\n\t\t\t\t<button onClick={this.getBalance}>get balance</button>\r\n\t\t\t\t<button onClick={this.getMinter}>get minter</button>\r\n\t\t\t\t\t*/\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Web3 from 'web3'\r\nimport Video from './abis/Video.json'\r\n// import Coin from './abis/ERC20.json'\r\nimport Multihash from './ipfsHash'\r\nimport Navbar from './components/pieces/Navbar'\r\nimport MyVideos from './components/pages/myvideos.component'\r\nimport Home from './components/pages/home.component'\r\nimport Explore from './components/pages/explore.component'\r\nimport DeepCoin from './components/pages/deepcoin.component'\r\n\r\nconst ipfsClient = require('ipfs-http-client')\r\nconst ipfs = ipfsClient({ host: 'ipfs.infura.io', port: '5001', protocol: 'https' })\r\n\r\nclass App extends Component {\r\n\r\n  async componentDidMount() {\r\n    await this.loadWeb3()\r\n    if (this.state.usingWallet) await this.loadBlockchainData()\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    \r\n    this.changePage = this.changePage.bind(this)\r\n    this.setViewOriginal = this.setViewOriginal.bind(this)\r\n    this.loadOriginalLinks = this.loadOriginalLinks.bind(this)\r\n\r\n    this.state = {\r\n      account: '', \r\n      buffer: null, \r\n      contract: null, \r\n      coinContract: null, \r\n      hash: null, \r\n      videos: null, \r\n      comparehash: null, \r\n      searchHash: null, \r\n      deepfake: null, \r\n      compareDeepfake: null, \r\n      timestamp: null, \r\n      compareTimestamp: null, \r\n      showCompare: false, \r\n      page: \"home\", \r\n      originalLinks: null, \r\n      viewOriginal: null, \r\n      fakeLink: null, \r\n      usingWallet: true, \r\n      usingAccount: false, \r\n      // linkFake: null\r\n    }\r\n  }\r\n\r\n  async loadWeb3() {\r\n    let usingWallet\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum)\r\n      await window.ethereum.enable()\r\n    } else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider)\r\n    } else {\r\n      // window.alert('Please use metamask!')\r\n      usingWallet = false\r\n      this.setState({ usingWallet })\r\n    }\r\n    if (usingWallet) {\r\n      window.ethereum.on('accountsChanged', (account) => {\r\n        this.setState({ account: account[0] })\r\n      })\r\n    }\r\n  }\r\n\r\n  async loadBlockchainData() {\r\n    const web3 = window.web3\r\n    const accounts = await web3.eth.getAccounts()\r\n    if (accounts[0] !== null) {\r\n      this.setState({ usingAccount: true })\r\n    }\r\n    this.setState({ account: accounts[0] })\r\n    const networkId = await web3.eth.net.getId()\r\n    const networkData = Video.networks[networkId]\r\n    if (networkData) {\r\n      const videoAbi = Video.abi\r\n      // const coinAbi = Coin.abi\r\n      const address = networkData.address\r\n      const contract = web3.eth.Contract(videoAbi, address)\r\n      // const coinContract = web3.eth.Contract(coinAbi, address)\r\n      this.setState({\r\n        contract: contract, \r\n        // coinContract: coinContract\r\n      })\r\n    } else {\r\n      window.alert('Smart contract not deployed to detected network!')\r\n    }\r\n  }\r\n\r\n  changePage(e) {\r\n    this.setState({\r\n      page: e.target.id\r\n    })\r\n  }\r\n\r\n  markAsDeepfake = async (event) => {\r\n    // const deepfakeHash = Multihash.getBytes32FromMultihash(event.target.value)\r\n    // this.state.contract.methods.markAsDeepfake(\r\n    \r\n    // ).send({ from: this.state.account })\r\n  }\r\n\r\n  async loadOriginalLinks(fakeDigest) {\r\n    let len = await this.state.contract.methods\r\n          .getOriginalLinksCount(fakeDigest).call()\r\n    len = parseInt(len['_hex'], 16) \r\n    let originalLinks = []\r\n    for (let i = 0; i < len; i++) {\r\n      let link = await this.state.contract.methods\r\n            .getOriginalLinks(fakeDigest, i).call()\r\n      // TODO: build size and hash function into smart contract\r\n      // so you don't have to default here\r\n      const multihash = Multihash.getMultihashFromBytes32([link['0'], 18, 32])\r\n      const supportCount = parseInt(link['1']['_hex'], 16) \r\n      originalLinks.push({multihash, supportCount})\r\n    }\r\n    this.setState({ originalLinks })\r\n  }\r\n\r\n    // if just pressing back button, don't send digest\r\n  setViewOriginal(e, viewOriginalPage) {\r\n    const viewOriginal = this.state.viewOriginal\r\n    if (viewOriginalPage) {\r\n      let fakeDigest = Multihash.getBytes32FromMultihash(e.target.getAttribute(\"value\"))['digest']\r\n      let fakeLink = e.target.getAttribute(\"value\")\r\n      this.setState({ fakeLink })\r\n      this.loadOriginalLinks(fakeDigest)\r\n    } \r\n    this.setState({ viewOriginal: !viewOriginal })\r\n  }\r\n\r\n  render() {\r\n    let pageProps = {\r\n      account: this.state.account, \r\n      contract: this.state.contract, \r\n      page: this.state.page, \r\n      originalLinks: this.state.originalLinks,\r\n      setViewOriginal: this.setViewOriginal, \r\n      viewOriginal: this.state.viewOriginal\r\n    }\r\n\r\n    // FIXME: why is render method called 3 times (confirm with console.log)\r\n    let pageContent; \r\n    if (this.state.usingWallet === false || this.state.page === \"home\") {\r\n      pageContent = <Home />\r\n    } else if (this.state.page === \"myVideos\") {\r\n      pageContent = <MyVideos {...pageProps} ipfs={ipfs} />\r\n    } else if (this.state.page === \"exploreDeepfakes\") {\r\n      pageContent = <Explore {...pageProps} markAsDeepfake={this.markAsDeepfake} />\r\n    } else if (this.state.page === \"exploreOriginals\") {\r\n      pageContent = <Explore {...pageProps} markAsDeepfake={this.markAsDeepfake} />\r\n    } else if (this.state.page === \"deepCoin\") {\r\n      pageContent = <DeepCoin \r\n                      {...pageProps} \r\n                      coinContract={this.state.coinContract}\r\n                    />\r\n    } else {\r\n      pageContent = <h1>Loading Videos...</h1>\r\n    }\r\n    // let pageContent = <h1>asdf</h1>\r\n\r\n    return (\r\n      <div>\r\n        <Navbar \r\n          account={this.state.account} \r\n          changePage={this.changePage}\r\n          usingWallet={this.state.usingWallet}\r\n          usingAccount={this.state.usingAccount}\r\n        />\r\n        <div className=\"container-fluid mt-5\">\r\n          <div className=\"row\">\r\n            <main role=\"main\" className=\"col-lg-12 d-flex text-center borderb\">\r\n              <div className=\"mr-auto ml-auto borderc\">\r\n                <p>&nbsp;</p>\r\n                <p>&nbsp;</p>\r\n                {pageContent}\r\n              </div>\r\n            </main>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}